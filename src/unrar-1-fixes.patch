diff -rupNb unrar-orig/makefile unrar/makefile
--- unrar-orig/makefile	2014-01-31 08:50:15.000000000 -0600
+++ unrar/makefile	2015-08-22 03:19:30.256680964 -0500
@@ -4,10 +4,10 @@
 # Linux using GCC
 CXX=g++
 CXXFLAGS=-O2
-LIBFLAGS=-fPIC
-DEFINES=-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DRAR_SMP
+LIBFLAGS=
+DEFINES=-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
 STRIP=strip
-LDFLAGS=-pthread
+LDFLAGS=
 DESTDIR=/usr
 
 # Linux using LCC
@@ -118,10 +118,10 @@ uninstall:	uninstall-unrar
 clean:
 	@rm -f *.o *.bak *~
 
-unrar:	clean $(OBJECTS) $(UNRAR_OBJ)
-	@rm -f unrar
-	$(LINK) -o unrar $(LDFLAGS) $(OBJECTS) $(UNRAR_OBJ) $(LIBS)	
-	$(STRIP) unrar
+unrar:	$(OBJECTS) $(UNRAR_OBJ)
+	@rm -f unrar.exe
+	$(LINK) -o unrar.exe $(LDFLAGS) $(OBJECTS) $(UNRAR_OBJ) $(LIBS)
+	$(STRIP) unrar.exe
 
 sfx:	WHAT=SFX_MODULE
 sfx:	clean $(OBJECTS)
@@ -131,18 +131,20 @@ sfx:	clean $(OBJECTS)
 
 lib:	WHAT=RARDLL
 lib:	CXXFLAGS+=$(LIBFLAGS)
-lib:	clean $(OBJECTS) $(LIB_OBJ)
-	@rm -f libunrar.so
-	$(LINK) -shared -o libunrar.so $(LDFLAGS) $(OBJECTS) $(LIB_OBJ)
+lib:	$(OBJECTS) $(LIB_OBJ)
+	@rm -f unrar.dll libunrar.dll.a
+	$(LINK) -shared -Wl,--out-implib,libunrar.dll.a -o unrar.dll $(LDFLAGS) $(OBJECTS) $(LIB_OBJ)
 
-install-unrar:
-			install -D unrar $(DESTDIR)/bin/unrar
+install-unrar: unrar
+			install -D unrar.exe $(DESTDIR)/bin/unrar.exe
 
 uninstall-unrar:
 			rm -f $(DESTDIR)/bin/unrar
 
-install-lib:
-		install libunrar.so $(DESTDIR)/lib
+install-lib: lib
+		install -D unrar.dll $(DESTDIR)/bin/unrar.dll
+		install -D libunrar.dll.a $(DESTDIR)/lib/libunrar.dll.a
+		install -D dll.hpp $(DESTDIR)/include/unrar/dll.hpp
 
 uninstall-lib:
 		rm -f $(DESTDIR)/lib/libunrar.so
Binary files unrar-orig/.makefile.swp and unrar/.makefile.swp differ
diff -rupNb unrar-orig/unicode.cpp unrar/unicode.cpp
--- unrar-orig/unicode.cpp	2015-08-04 05:22:40.000000000 -0500
+++ unrar/unicode.cpp	2015-08-22 02:41:01.217384435 -0500
@@ -476,7 +476,7 @@ int toupperw(int ch)
   // CharUpper is more reliable than towupper in Windows, which seems to be
   // C locale dependent even in Unicode version. For example, towupper failed
   // to convert lowercase Russian characters.
-  return (int)CharUpper((wchar *)ch);
+  return (int)(LPARAM)CharUpper((wchar *)ch);
 #else
   return towupper(ch);
 #endif
@@ -488,7 +488,7 @@ int tolowerw(int ch)
 #ifdef _WIN_ALL
   // CharLower is more reliable than towlower in Windows.
   // See comment for towupper above.
-  return (int)CharLower((wchar *)ch);
+  return (int)(LPARAM)CharLower((wchar *)ch);
 #else
   return towlower(ch);
 #endif
